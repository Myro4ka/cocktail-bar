{"mappings":"oeACAA,EAAA,S,yGAYA,EAAAC,EAAAC,oBAAmBC,EAAAC,MAAOC,IACnBA,GAGL,EAAAC,EAAAC,cACGC,MAAKC,IAGJ,GAFAC,QAAQC,IAAI,WAAYF,GACxBG,EAAAC,KAAKC,aAAaC,YAAc,wBAC3BN,EAAU,CACb,MAAMO,EAAS,wFAIf,YAHAC,SACGC,cAAc,sBACdC,mBAAmB,YAAaH,EAErC,CACA,MAAMI,EAAQ,GAEdC,OAAOC,QAAQb,GAAUc,SAAQ,EAAEC,EAAKC,MAEtCL,EAAMM,KAAKD,GACXf,QAAQC,IAAIS,EAAA,IAEd,MAAMO,EAAe,GACfC,EAAWR,EAAMS,KAAIC,IAAQ,EAAAC,EAAAC,qBAAoBF,KAEvDG,QAAQC,IAAIN,GAAUpB,MAAK2B,IACxBzB,QAAQC,IAAIwB,GACb,IAAK,MAAMC,YAAEA,KAAiBD,EAC5BR,EAAaD,KAAKU,EAAY,IAEhC1B,QAAQC,IAAIgB,IACZ,EAAAU,EAAAC,MAAKX,EAAA,GACP,IAEDY,OAAMC,IACL9B,QAAQC,IAAI6B,EAAA,IAjCdC,SAASC,QAAQ,IAkCjB","sources":["src/js/favorite-i.js"],"sourcesContent":["// import './gallery';\nimport './modal-cocktail';\n// import './modal-ingredient';\nimport './header';\nimport './header/mob-menu.js';\nimport { onAuthStateChanged } from '@firebase/auth';\nimport { auth } from './auth/api/auth';\n// import { main } from './pagination';\nimport { refs } from './gallery/refs/refs';\nimport { getIngrids } from './auth/api';\nimport { getIngredientByName } from './modal-ingredient/api/api';\nimport { main } from './pagination';\n\nonAuthStateChanged(auth, (user) => {\n  if (!user) {\n    location.replace('/');\n  } else\n  getIngrids()\n    .then(response => {\n      console.log('response', response);\n      refs.coctailTitel.textContent = 'Favorite ingredients';\n      if (!response) {\n        const markup = `<p class=\"no-added-message__text\">You haven't added any favorite ingredients yet</p>`;\n        document\n          .querySelector('.gallery.container')\n          .insertAdjacentHTML('beforeend', markup);\n        return;\n      }\n      const array = [];\n      //       //  Получаем массив масива\n      Object.entries(response).forEach(([key, value]) => {\n        //         //Добавить key from firebase\n        array.push(value);\n        console.log(array);\n      });\n      const arrayIngrids = [];\n      const promises = array.map(name => getIngredientByName(name));\n      // console.log(promises);\n      Promise.all(promises).then(data => {\n         console.log(data);\n        for (const { ingredients } of data) {\n          arrayIngrids.push(ingredients[0]);\n        }\n        console.log(arrayIngrids);\n        main(arrayIngrids);\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n});"],"names":["parcelRequire","$1iO0g","onAuthStateChanged","$fy93h","auth","user","$fvTqB","getIngrids","then","response","console","log","$1lZvt","refs","coctailTitel","textContent","markup","document","querySelector","insertAdjacentHTML","array","Object","entries","forEach","key","value","push","arrayIngrids","promises","map","name","$bE4bs","getIngredientByName","Promise","all","data","ingredients","$2nhTy","main","catch","error","location","replace"],"version":3,"file":"favorites-i.f9658cce.js.map"}